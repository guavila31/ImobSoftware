/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import View.Informacao.InternalInfoAjuda;
import View.Informacao.InternalInfoCadImoveis;
import View.Informacao.InternalInfoFRegPessoa;
import View.Informacao.InternalInfoCadPessoas;
import View.Informacao.InternalInfoCadVendedor;
import View.Informacao.InternalInfoFRegImovel;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import java.awt.event.*;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author gusta
 */
public class InternalInformacoes extends javax.swing.JInternalFrame {

    private static InternalInformacoes instance;

    public static InternalInformacoes getInstance() {
        if (instance == null) {
            instance = new InternalInformacoes();
        }
        return instance;
    }

    DefaultTreeModel model;

    public InternalInformacoes() {
        initComponents();
        Load();
    }
    DefaultMutableTreeNode arvore = new DefaultMutableTreeNode("ImobSoftwere");

    public void Load() {
        DefaultMutableTreeNode registro = new DefaultMutableTreeNode("Ficha de Registro");
        registro.add(new DefaultMutableTreeNode("Ficha de Pessoa"));
        registro.add(new DefaultMutableTreeNode("Ficha de Imóvel"));
        DefaultMutableTreeNode cadastros = new DefaultMutableTreeNode("Cadastros");
        cadastros.add(new DefaultMutableTreeNode("Pessoas Cadastradas"));
        cadastros.add(new DefaultMutableTreeNode("Imóveis Cadastradas"));
        cadastros.add(new DefaultMutableTreeNode("Vendedores cadastrados"));
//        DefaultMutableTreeNode contratos = new DefaultMutableTreeNode("Contratos");
//        contratos.add(new DefaultMutableTreeNode("Imprimir Contrato"));
//        contratos.add(new DefaultMutableTreeNode("Visualizar Contratos"));
//        DefaultMutableTreeNode ajuda = new DefaultMutableTreeNode("Ajuda");
//        ajuda.add(new DefaultMutableTreeNode("Ajuda"));
        arvore.add(registro);
        arvore.add(cadastros);
//        arvore.add(contratos);
//        arvore.add(ajuda);
        model = (DefaultTreeModel) DefaultMutableTreeNode.getModel();
        model.setRoot(arvore);
        DefaultMutableTreeNode.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultMutableTreeNode = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        txtnode = new javax.swing.JLabel();
        txtfee = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setTitle("..:Informações:..");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagem/botao-de-informacao.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(1500, 900));
        setMinimumSize(new java.awt.Dimension(1500, 900));
        setPreferredSize(new java.awt.Dimension(1100, 700));
        getContentPane().setLayout(null);

        DefaultMutableTreeNode.setFont(new java.awt.Font("Nirmala UI Semilight", 0, 24)); // NOI18N
        DefaultMutableTreeNode.setForeground(new java.awt.Color(243, 225, 182));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        DefaultMutableTreeNode.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        DefaultMutableTreeNode.setToolTipText("Pesquisar");
        DefaultMutableTreeNode.setRowHeight(32);
        DefaultMutableTreeNode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DefaultMutableTreeNodeMouseClicked(evt);
            }
        });
        DefaultMutableTreeNode.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                DefaultMutableTreeNodeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(DefaultMutableTreeNode);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(21, 20, 370, 613);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel2.setLayout(null);

        jDesktopPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtnode.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtnode.setForeground(new java.awt.Color(255, 255, 255));
        txtnode.setText("jLabel1");
        jDesktopPane1.add(txtnode);
        txtnode.setBounds(100, 40, 420, 37);
        jDesktopPane1.add(txtfee);
        txtfee.setBounds(100, 90, 410, 30);

        jPanel2.add(jDesktopPane1);
        jDesktopPane1.setBounds(0, 0, 580, 610);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(490, 20, 580, 613);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(440, 20, 12, 613);

        pack();
    }// </editor-fold>                        

    private void DefaultMutableTreeNodeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_DefaultMutableTreeNodeValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_DefaultMutableTreeNodeValueChanged

    private void DefaultMutableTreeNodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DefaultMutableTreeNodeMouseClicked
        // TODO add your handling code here:
        arvore = (DefaultMutableTreeNode) DefaultMutableTreeNode.getSelectionPath().getLastPathComponent();
        txtnode.setText(arvore.getUserObject().toString());

        String select = arvore.getUserObject().toString();

        if (select.equals("Ficha de Pessoa")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoFRegPessoa tela = new InternalInfoFRegPessoa().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }
        } else if (select.equals("Ficha de Imóvel")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoFRegImovel tela = new InternalInfoFRegImovel().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }
        } else if (select.equals("Pessoas Cadastradas")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoCadPessoas tela = new InternalInfoCadPessoas().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }
        } else if (select.equals("Imóveis Cadastradas")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoCadImoveis tela = new InternalInfoCadImoveis().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }
        } else if (select.equals("Vendedores cadastrados")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoCadVendedor tela = new InternalInfoCadVendedor().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }
        } else if (select.equals("Ajuda")) {
            for (JInternalFrame f : jDesktopPane1.getAllFrames()) {
                f.dispose();
            }
            InternalInfoAjuda tela = new InternalInfoAjuda().getInstance();
            tela.pack();
            if (!tela.isVisible()) {
                jDesktopPane1.add(tela);
                tela.setVisible(true);
                try {
                    //tela.setMaximum(true);
                    tela.setSelected(true);
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            } else {
                tela.moveToFront();
            }

        }
    }//GEN-LAST:event_DefaultMutableTreeNodeMouseClicked


    // Variables declaration - do not modify                     
    private javax.swing.JTree DefaultMutableTreeNode;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtfee;
    private javax.swing.JLabel txtnode;
    // End of variables declaration                   
}


